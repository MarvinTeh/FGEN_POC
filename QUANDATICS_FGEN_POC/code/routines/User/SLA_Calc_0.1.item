package routines;
import java.util.Date;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class SLA_Calc {

    /**
     * helloExample: not return value, only print "hello" + message.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("world") input: The string need to be printed.
     * 
     * {example} helloExemple("world") # hello world !.
     */
    public static Double PR_Approval_Calc(Date PRCreation, Date PRApproval, Date POCreation, String Holidays) {
        Date Start= PRCreation;
        Date End= PRApproval==null?POCreation:PRApproval;
        Double TotalSLA=0.0;
        Date Start_day= TalendDate.parseDate("yyyy-MM-dd",TalendDate.formatDate("yyyy-MM-dd",Start));
        Date End_day=TalendDate.parseDate("yyyy-MM-dd",TalendDate.formatDate("yyyy-MM-dd",End));
        
        Integer Counter=Integer.valueOf(String.valueOf(TalendDate.diffDate(End_day,Start_day,"DD")));
        System.out.println(Counter);
        Date CurrDate=Start_day;
        
        for(int i=0;i<=Counter;i++)
		{
        	System.out.println(CurrDate);
        	if(i>0&&(String.valueOf(TalendDate.getPartOfDate("ddd", CurrDate)).equalsIgnoreCase("Sat")||String.valueOf(TalendDate.getPartOfDate("ddd", CurrDate)).equalsIgnoreCase("Sun")||Holidays.contains(TalendDate.formatDate("yyyy-MM-dd", CurrDate))))        	
        	{break;}
        	if(i==Counter&&Counter==0)
        	{
        		TotalSLA=Double.valueOf(Integer.valueOf(String.valueOf(TalendDate.diffDate(End, Start,"HH"))));
        		System.out.println(TotalSLA);
        	}
        	else if(i==0)
        	{
        		TotalSLA=Double.valueOf(String.valueOf(TalendDate.diffDate(TalendDate.addDate(Start_day, 17, "HH"), Start,"HH")));
        		System.out.println(TotalSLA);
        	}
        	else if(i==Counter)
        	{
        		TotalSLA+=Double.valueOf(String.valueOf(TalendDate.diffDate(End, TalendDate.addDate(End_day, 8, "HH"),"HH")));
        		System.out.println(TotalSLA);
        	}
        	else
        	{
        		TotalSLA+=9.0;
        		System.out.println(TotalSLA);
        	}
        	TalendDate.addDate(CurrDate, 1, "dd");
		}
        
        TotalSLA=TotalSLA/9.0;
        
        return TotalSLA;
        
    }
}
